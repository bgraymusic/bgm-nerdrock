AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::LanguageExtensions'

Description: Nerdrock Website Deployment Configuration

Parameters:
  Org:
    Type: String
  Project:
    Type: String
  Stage:
    Type: String

Resources:

  AlbumInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub $(Org)-$(Project)-$(Stage)-albuminfo
      AttributeDefinitions:
        - AttributeName: album_id
          AttributeType: 'N'
      KeySchema:
        - AttributeName: album_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  TrackInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub $(Org)-$(Project)-$(Stage)-trackinfo
      AttributeDefinitions:
        - AttributeName: album_id
          AttributeType: 'N'
        - AttributeName: number
          AttributeType: 'N'
      KeySchema:
        - AttributeName: album_id
          KeyType: HASH
        - AttributeName: number
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  BadgesLambda:
    Type: bgm::nerdrock::lambda::MODULE
    Properties:
      Org: !Sub ${Org}
      Project: !Sub ${Project}
      Stage: !Sub ${Stage}
      LambdaName: badges

  DiscographyLambda:
    Type: bgm::nerdrock::lambda::MODULE
    Properties:
      Org: !Sub ${Org}
      Project: !Sub ${Project}
      Stage: !Sub ${Stage}
      LambdaName: discography

  DatabaseRefreshLambda:
    Type: bgm::nerdrock::lambda::MODULE
    Properties:
      Org: !Sub ${Org}
      Project: !Sub ${Project}
      Stage: !Sub ${Stage}
      LambdaName: databaseRefresh

  NerdrockWebsite:
    Type: bgm::nerdrock::s3website::MODULE
    Properties:
      Org: !Sub ${Org}
      Project: !Sub ${Project}
      Stage: !Sub ${Stage}

  NerdrockRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ${Org}-${Project}-${Stage}

  NerdrockResourceApi:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt NerdrockRestApi.RootResourceId
      PathPart: api
      RestApiId: !Ref NerdrockRestApi

  ApiGatewayResourceApiBadges:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref ApiGatewayResourceApi
      PathPart: badges
      RestApiId: !Ref ApiGatewayRestApi

  ResourceGroup:
    Type: bgm::nerdrock::resourcegroup::MODULE
    Properties:
      Org: !Sub ${Org}
      Project: !Sub ${Project}
      Stage: !Sub ${Stage}
